[
    {"question": "What is a data structure?", "answer": "A data structure is a way of organizing and storing data to perform operations efficiently."},
    {"question": "Why are data structures important?", "answer": "Data structures are essential for managing and organizing data, enabling efficient algorithms and problem-solving."},
    {"question": "Give an example of a linear data structure.", "answer": "An array is an example of a linear data structure."},
    {"question": "What is an algorithm?", "answer": "An algorithm is a step-by-step procedure or formula for solving problems."},
    {"question": "How is a stack different from a queue?", "answer": "A stack follows the Last In, First Out (LIFO) principle, while a queue follows the First In, First Out (FIFO) principle."},
    {"question": "Explain the concept of recursion.", "answer": "Recursion is a programming concept where a function calls itself directly or indirectly to solve a problem."},
    {"question": "What is a linked list?", "answer": "A linked list is a linear data structure where elements are stored in nodes, and each node points to the next one in the sequence."},
    {"question": "How does a binary search work?", "answer": "Binary search is an efficient algorithm for finding a target value within a sorted array. It repeatedly divides the search range in half until the target is found."},
    {"question": "What is the time complexity of the quicksort algorithm?", "answer": "The average time complexity of quicksort is O(n log n), making it a fast and efficient sorting algorithm."},
    {"question": "Define a hash table.", "answer": "A hash table is a data structure that uses a hash function to map keys to values. It provides efficient data retrieval and storage."},
    {"question": "What is dynamic programming?", "answer": "Dynamic programming is a method for solving complex problems by breaking them down into simpler overlapping subproblems and solving each subproblem only once."},
    {"question": "Explain the concept of Big O notation.", "answer": "Big O notation is used to describe the upper bound on the growth rate of an algorithm's time complexity in the worst-case scenario."},
    {"question": "What is a tree in data structures?", "answer": "A tree is a hierarchical data structure composed of nodes connected by edges. It has a root node, and each non-leaf node has child nodes."},
    {"question": "What is the purpose of a depth-first search (DFS)?", "answer": "Depth-first search is an algorithm used to traverse or search tree or graph data structures. It explores as far as possible before backtracking."},
    {"question": "How does a breadth-first search (BFS) algorithm work?", "answer": "Breadth-first search is an algorithm that visits all the vertices of a graph in breadthward motion, exploring all the neighbors at the present depth prior to moving on."},
    {"question": "What is an AVL tree?", "answer": "An AVL tree is a self-balancing binary search tree, where the height of the two child subtrees of every node differs by at most one."},
    {"question": "Explain the concept of a priority queue.", "answer": "A priority queue is a data structure that stores elements with associated priorities and supports operations such as insertion and extraction of the element with the highest priority."},
    {"question": "What is the purpose of graph algorithms?", "answer": "Graph algorithms are used to analyze relationships between entities, represented as vertices, in a graph. They solve problems related to networks and connections."},
    {"question": "How does Dijkstra's algorithm work?", "answer": "Dijkstra's algorithm is a greedy algorithm used for finding the shortest path between nodes in a graph, considering the weight of the edges."},
    {"question": "What is the purpose of a trie?", "answer": "A trie (prefix tree) is a tree-like data structure used to store a dynamic set or associative array where the keys are usually strings."},
    {"question": "Explain the concept of a Huffman coding.", "answer": "Huffman coding is a compression algorithm that assigns variable-length codes to input characters, with shorter codes assigned to more frequently occurring characters."},
    {"question": "How does the A* algorithm work?", "answer": "The A* algorithm is an informed search algorithm that uses a heuristic to estimate the cost of reaching a goal from a given node, combining both cost and heuristic information."},
    {"question": "Define a B-tree.", "answer": "A B-tree is a self-balancing tree data structure that maintains sorted data and allows searches, insertions, deletions, and sequential access in logarithmic time."},
    {"question": "What is the purpose of Kruskal's algorithm?", "answer": "Kruskal's algorithm is used to find the minimum spanning tree of a connected, undirected graph. It adds edges to the growing minimum spanning tree in ascending order of edge weights."},
    {"question": "Explain the concept of a suffix array.", "answer": "A suffix array is an array of all suffixes of a given string, sorted in lexicographic order. It is useful for various string-related operations."},
    {"question": "How does the Floyd-Warshall algorithm work?", "answer": "The Floyd-Warshall algorithm is used to find the shortest paths between all pairs of vertices in a weighted graph, considering negative edge weights."},
    {"question": "What is the purpose of a Bloom filter?", "answer": "A Bloom filter is a space-efficient probabilistic data structure that tests whether a given element is a member of a set. It may return false positives but not false negatives."},
    {"question": "Explain the concept of memoization.", "answer": "Memoization is an optimization technique where the results of expensive function calls are stored and reused when the same inputs occur again."},
    {"question": "How does the traveling salesman problem relate to graph theory?", "answer": "The traveling salesman problem is a classic optimization problem that involves finding the shortest possible route that visits a given set of cities and returns to the starting city."},
    {"question": "Define a splay tree.", "answer": "A splay tree is a self-adjusting binary search tree with the additional property that recently accessed elements are quick to access again."},
    {"question": "What is a trie data structure used for?", "answer": "A trie is often used to store a dynamic set of strings, where the keys are sequences of characters, such as a dictionary or autocomplete feature."},
    {"question": "Explain the concept of a topological sort.", "answer": "Topological sorting is an ordering of the vertices of a directed acyclic graph (DAG) such that for every directed edge (u, v), vertex u comes before vertex v in the ordering."},
    {"question": "How does the Boyer-Moore algorithm work?", "answer": "The Boyer-Moore algorithm is an efficient string-searching algorithm that performs preprocessing to skip portions of the text during the search."},
    {"question": "Define an Eulerian path.", "answer": "An Eulerian path is a trail in a graph that visits every edge exactly once. If the path starts and ends at the same vertex, it is called an Euler."}

]